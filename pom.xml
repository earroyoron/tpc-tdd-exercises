<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ The Programming Chronicles Test-Driven Development Exercises
  ~ (http://theprogrammingchronicles.com/)
  ~
  ~ Copyright (C) 2010-2011, Pedro Ballesteros <pedro@theprogrammingchronicles.com>
  ~ or third-party contributors as indicated by the @author tags or express 
  ~ copyright attribution statements applied by the authors. All third-party 
  ~ contributions are distributed under license by Pedro Ballesteros.
  ~
  ~ This copyrighted material is free software: you can redistribute it 
  ~ and/or modify it under the terms of the GNU General Public License as 
  ~ published by the Free Software Foundation, either version 3 of the 
  ~ License, or (at your option) any later version.
  ~  
  ~ This material is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~ 
  ~ You should have received a copy of the GNU General Public License
  ~ along with this material. This copy is available in LICENSE-GPL.txt 
  ~ file. If not, see <http://www.gnu.org/licenses/>.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.programmingchronicles.tdd</groupId>
  <artifactId>tdd-exercises</artifactId>
  <packaging>pom</packaging>
  <version>1.0-SNAPSHOT</version>

  <name>Test-Driven Development Exercises</name>
  <description>
        Test-Driven Development - Exercises &amp; examples
  </description>
  <url>http://theprogrammingchronicles.com/</url>
  <inceptionYear>2010</inceptionYear>

  <organization>
    <name>The Programming Chronicles</name>
    <url>http://theprogrammingchronicles.com/</url>
  </organization>

  <licenses>
    <license>
      <name>GNU General Public License Version 3</name>
      <url>http://www.gnu.org/licenses/gpl-3.0-standalone.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>pmbh</id>
      <name>Pedro Ballesteros</name>
      <email>pedro@theprogrammingchronicles.com</email>
      <url>http://theprogrammingchronicles.com/</url>
    </developer>
  </developers>

  <modules>
    <module>tdd-lesson-1</module>
    <module>tdd-lesson-2</module>
    <module>tdd-lesson-3</module>
    <module>tdd-lesson-4</module>
    <module>tdd-lesson-5</module>
    <module>tdd-lesson-6</module>
    <module>tdd-lesson-7</module>
    <module>tdd-appendix-A</module>
  </modules>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.jdk>1.6</project.build.jdk>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <!-- Versión por defecto de las dependencias de todos los ejercicios -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.4</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-all</artifactId>
        <version>1.8.4</version>
        <scope>test</scope>
      </dependency>

      <!-- Servlet API: Incluída en Tomcat. SCOPE: provided -->
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>2.5</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax.servlet.jsp</groupId>
        <artifactId>jsp-api</artifactId>
        <version>2.1</version>
        <scope>provided</scope>
      </dependency>

      <!-- JSTL: No incluído en Tomcat. SCOPE: runtime -->
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>jstl</artifactId>
        <version>1.1.2</version>
        <scope>runtime</scope>
      </dependency>

      <!-- Apache JSTL: No incluído en Tomcat. SCOPE: Runtime -->
      <dependency>
        <groupId>taglibs</groupId>
        <artifactId>standard</artifactId>
        <version>1.1.2</version>
        <scope>runtime</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <!-- Fija la versión por defecto de los plugins para conseguir
         builds repetibles con diferentes versiones de maven -->
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.0</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.5</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.3.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.4.3</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.5</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.5</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.3.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>2.0.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.4</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-invoker-plugin</artifactId>
          <version>1.5</version>
        </plugin>

        <!-- Versión plugins de informes -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>2.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>2.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>2.5</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>2.5</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cobertura-maven-plugin</artifactId>
          <version>2.4</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.7</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jxr-plugin</artifactId>
          <version>2.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>2.5</version>
        </plugin>

      </plugins>
    </pluginManagement>

    <!-- Plugins que se adjuntan por defecto al lifecycle de todos los módulos -->
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${project.build.jdk}</source>
          <target>${project.build.jdk}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <configuration>
          <inputEncoding>${project.build.sourceEncoding}</inputEncoding>
          <outputEncoding>${project.build.sourceEncoding}</outputEncoding>
          <locales>es</locales>
        </configuration>
      </plugin>

      <!-- Ejecuta "cobertura:clean" en antes de "site" ya que los contadores
           siempre se agregan al fichero "ser", no se sustituyen, y los informes
           no serían reales si no se ejecuta un "clean" antes de "site". -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>site-cobertura-clean</id>
            <phase>pre-site</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Para el "index.html" de todos los sites se usa el readme.txt contenido
           en /src/site, copiandolo en /src/site/apt y en el directorio
           base del proyecto para hacerlo más accesible en los IDEs.

           Para el "site.css" se intenta copiar desde el proyecto padre para
           que toda la documentación de todos los módulos tenga el mismo estilo.
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>site-copy-index-css</id>
            <phase>pre-site</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <!-- Copia el readme.txt como el index.apt.vm, es
                     decir con formato APT con templates velocity -->
                <copy file="${basedir}/src/site/readme.txt" tofile="${basedir}/src/site/apt/index.apt.vm" failonerror="false" overwrite="true"/>

                <!-- Copia el readme.txt al directorio raiz
                     para hacerlo más visible en el proyecto -->
                <copy file="${basedir}/src/site/readme.txt" todir="${basedir}" failonerror="false" overwrite="true"/>

                <!-- Copia el site.css desde el padre o el padre del padre
                     para igualar estilos en todos los módulos -->
                <copy file="${basedir}/../src/site/resources/css/site.css" todir="${basedir}/src/site/resources/css" failonerror="false" overwrite="true"/>
                <copy file="${basedir}/../../src/site/resources/css/site.css" todir="${basedir}/src/site/resources/css" failonerror="false" overwrite="true"/>
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <!-- Configuración de los informes generados con el "site" lifecycle -->
  <reporting>
    <plugins>
      <!-- Selecciona los informes de la sección Project Information -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <reportSets>
          <reportSet>
            <configuration>
              <!--
                Se desactiva el enlace de descarga de los jar de
                dependencias en los informes, y el contador de
                artefactos contenidos en dependencias. Esto hace
                que la generación de informes sea más rápida -->
              <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
              <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
            </configuration>
            <reports>
              <report>dependencies</report>
              <report>dependency-convergence</report>
              <report>dependency-management</report>
              <report>help</report>
              <report>index</report>
              <report>license</report>
              <report>modules</report>
              <report>plugin-management</report>
              <report>plugins</report>
              <report>project-team</report>
              <report>summary</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <!-- Configuración de informes para la sección Project Reports -->

      <!-- Informe de cobertura de tests -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
      </plugin>

      <!-- Informe de resultados de tests.

           IMPORTANTE:
           Se configura el informe "report-only" para evitar que se lancen
           dos veces los tests ya que el plugin de "cobertura" los ha lanzado.

           Si se quita cobertura hay que quitar el "report-only" o configurar
           el "report" -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <reportSets>
          <reportSet>
            <id>unit-test-report</id>
            <reports>
              <report>report-only</report>
              <!-- report>report</report -->
            </reports>
          </reportSet>
        </reportSets>
      </plugin>


      <!-- Informe de cumplimiento de los estandares de estilo de
           código fuente definidos para el proyecto

           TO DO: Falta incluir la definición de estilo. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
        </configuration>
      </plugin>

      <!-- Documentos de código fuente con referencias cruzadas para
           el enlace al código desde otros informes -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <configuration>
          <inputEncoding>${project.build.sourceEncoding}</inputEncoding>
          <outputEncoding>${project.build.sourceEncoding}</outputEncoding>
        </configuration>
      </plugin>

      <!-- Informes de posibles bugs, dead code, suboptimal code, overcomplicated
           code, y codigo repetido (copy and paste code).

           TO DO: Faltan los ficheros de reglas. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <configuration>
          <targetJdk>${project.build.jdk}</targetJdk>
        </configuration>
      </plugin>

    </plugins>
  </reporting>

  <!-- Datos de despliegue de la documentación realizada con "site-deploy"
       o site:deploy. Despliegua toda la documentación agregada. -->
  <distributionManagement>
    <site>
      <id>site-deploy</id>
      <url>${site.deploy.url}</url>
    </site>
  </distributionManagement>

  <!-- Perfiles para generación o ejecución de tareas pesadas -->
  <profiles>
    <profile>
      <!-- Perfil para generación de javadoc en el lifecycle "site" -->
      <id>with-javadoc</id>
      <reporting>
        <plugins>
          <!-- Se configura para no detenerse en los módulos que no compilan
               y para no generar un javadoc agregado ya que los modulos no
               representan proyectos diferentes, si no ejercicios diferentes -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <!-- El cambio de Sun a Oracle ha introducido una redirección
                   en las urls de la API que hacen que esto funcione mal -->
              <detectJavaApiLink>false</detectJavaApiLink>
              <links>
                <link>http://download.oracle.com/javase/6/docs/api/</link>
              </links>
            </configuration>

            <reportSets>
              <reportSet>
                <id>default-html</id>
                <configuration>
                  <failOnError>false</failOnError>
                  <show>package</show>
                </configuration>
                <reports>
                  <report>javadoc</report>
                </reports>
              </reportSet>
              <!-- Se genera javadoc para las clases de test -->
              <reportSet>
                <id>test-html</id>
                <configuration>
                  <failOnError>false</failOnError>
                  <show>package</show>
                </configuration>
                <reports>
                  <report>test-javadoc</report>
                </reports>
              </reportSet>
              <!-- Elimina la generación del javadoc agregado ya que los modulos son
                   ejercicios con código duplicado, no proyectos. -->
              <reportSet>
                <id>aggregate</id>
                <configuration>
                  <failOnError>false</failOnError>
                </configuration>
                <reports>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
        </plugins>
      </reporting>
    </profile>
  </profiles>
 
</project>